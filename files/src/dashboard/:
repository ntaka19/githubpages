import pandas as pd
import requests
import json
import matplotlib.pyplot as plt
import seaborn

url = 'https://api.open-meteo.com/v1/forecast?latitude=35.69&longitude=139.69&hourly=temperature_2m,rain,showers&timezone=Asia%2FTokyo'

response = requests.get(url)
data = json.loads(response.text)


def draw_chart(data):
    labels = data['hourly']['time']
    new_labels = ['-'.join(element.split("-")[1:]) for element in labels]
    rain = data['hourly']['rain']
    showers = data['hourly']['showers']
    temperature = data['hourly']['temperature_2m']

    df = pd.DataFrame({'Date': new_labels,
                       'Temperature': temperature,
                       'Rain': rain,
                       'Showers': showers})

    fig, ax = plt.subplots(figsize=(10, 4))

    # Set the background color to black
    fig.set_facecolor('white')
    ax.set_facecolor('white')

    # Set the tick and title color to white
    ax.tick_params(colors='black')
    ax.xaxis.label.set_color('black')
    ax.yaxis.label.set_color('black')
    ax.title.set_color('black')

    # plot data
    ax.plot(new_labels, temperature, color='red', label='Temperature')
    ax2 = ax.twinx()
    ax2.plot(new_labels, rain, color='blue', label='Rain')
    ax2.plot(new_labels, showers, color='green', label='Showers')

    # set x-axis tick labels
    ax.set_xticks(range(0, len(new_labels), 12))
    ax.set_xticklabels(new_labels[::12], rotation=90)

    print(new_labels)
    # set background color of xticks
    for i in range(0, len(new_labels), 12):
        print(i)
        if i%12 == 0:
            ax.axvspan(i, i+12, facecolor='grey', alpha=0.1)
        else :
            ax.axvspan(i, i+12, facecolor='white', alpha=0.1)
    # set labels and title
    ax.set_xlabel('Date')
    ax.set_ylabel('Temperature')
    ax2.set_ylabel('mm')
    ax.set_title('Weather Forecast(TOKYO) ' + labels[0].split('-')[0])

    # set legend
    ax.legend(loc='upper left')
    ax2.legend(loc='upper right')

    plt.tight_layout()
    plt.savefig('forecast.png')

draw_chart(data)

